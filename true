import test from 'ava'
import Chance from '../chance.js'
import _ from 'lodash'

const chance = new Chance()

const timeout = (seconds) => {
    new Promise((resolve, reject) => {
        setTimeout(() => resolve(), seconds)
    })
}

test('bool() returns a random boolean', t => {
    let bool = chance.bool()
    t.is(typeof bool, 'boolean')
})

test('bool() is within the bounds of what we would call random', t => {
    let trueCount = 0;
    _.times(1000, () => {
        if (chance.bool()) {
            trueCount++
        }
    })

    // The probability of this test failing is approximately 4.09e-86.
    // So, in theory, it could give a false negative, but the sun will
    // probably die long before that happens.

    t.true((trueCount > 200) && (trueCount < 800))
})

test('bool() takes and obeys likelihood', t => {
    let trueCount = 0
    _.times(1000, () => {
        if (chance.bool({ likelihood: 30 })) {
            trueCount++
        }
    })

    // Expect it to average around 300
    t.true((trueCount > 200) && (trueCount < 400))

    trueCount = 0
    _.times(1000, () => {
        if (chance.bool({ likelihood: 99 })) {
            trueCount++
